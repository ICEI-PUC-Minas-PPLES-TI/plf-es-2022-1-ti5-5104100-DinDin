name: Jest

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    name: CI Jest - Node.js ${{ matrix.node-version }} - MySQL 5.7
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: ['16.x']

    steps:
    - uses: actions/checkout@v1
    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Create .env file
      working-directory: ./Codigo/dindin-api/dindin-app
      run: |
        touch .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_NAME_TEST=${{ secrets.DB_NAME_TEST }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
    - name: Set up MySQL 5.7
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: ${{ secrets.DB_PORT }} # Optional, default value is 3306. The port of host
        container port: ${{ secrets.DB_PORT }} # Optional, default value is 3306. The port of container
        character set server: 'utf8mb4' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8mb4_bin' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql version: '5.7' # Optional, default value is "latest". The version of the MySQL
        mysql database: ${{ secrets.DB_NAME_TEST }} # Optional, default value is "test". The specified database which will be create
        mysql root password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
        mysql user: ${{ secrets.DB_USER }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        mysql password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"
    - name: npm install, build, and test
      working-directory: ./Codigo/dindin-api/dindin-app
      run: |
        npm install
        npm test
      env:
        CI: true