name: Continuous delivery with docker-compose

on:
  push:
    branches: [master]

jobs:
  backend-cd:
    name: Continuous delivery | Docker-compose API and Frontend
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}

      - name: Copy API to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          # Github path
          source: "Codigo/dindin-api/**"
          # VPS path
          target: "~/apps"

      - name: Copy frontend to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          # Github path
          source: "Codigo/dindin-frontend/**"
          # VPS path
          target: "~/apps"

      - name: Create API .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/Codigo/dindin-api
            touch .env
            echo MYSQLDB_USER=${{ secrets.MYSQLDB_USER }} >> .env
            echo MYSQLDB_ROOT_PASSWORD=${{ secrets.MYSQLDB_ROOT_PASSWORD }} >> .env
            echo MYSQLDB_DATABASE=${{ secrets.MYSQLDB_DATABASE }} >> .env
            echo MYSQLDB_LOCAL_PORT=${{ secrets.MYSQLDB_LOCAL_PORT }} >> .env
            echo MYSQLDB_DOCKER_PORT=${{ secrets.MYSQLDB_DOCKER_PORT }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_USER=${{ secrets.DB_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_NAME_TEST=${{ secrets.DB_NAME_TEST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo APP_DEBUG=${{ secrets.APP_DEBUG }} >> .env
            echo NODE_APP_HOST=${{ secrets.NODE_APP_HOST }} >> .env
            echo NODE_PUBLIC_PORT=3001 >> .env
            echo NODE_LOCAL_PORT=3001 >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo FB_PRIVATE_KEY="\"${{ secrets.FB_PRIVATE_KEY }}\"" >> .env
            echo NPM_DOCKER_CMD=ci >> .env

      - name: Create frontend node .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/Codigo/dindin-frontend
            touch .env
            echo NODE_LOCAL_PORT=80 >> .env
            echo NODE_PUBLIC_PORT=80 >> .env
            echo NODE_APP_HOST=${{ secrets.NODE_APP_HOST }} >> .env
            echo AXIOS_URL=http://40.76.212.193:3001/api >> .env
            echo NPM_DOCKER_CMD=start >> .env

      - name: Stop and remove Docker-compose running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker stop $(sudo docker ps -a -q) || true && sudo docker rm $(sudo docker ps -a -q) || true && sudo docker rm -vf $(sudo docker ps -aq) || true && sudo docker rmi -f $(sudo docker images -aq) || true && sudo docker volume rm $(sudo docker volume ls -q) || true

      - name: Build API Docker-compose VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/Codigo/dindin-api
            sudo docker-compose build

      - name: Build frontend Docker-compose VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/Codigo/dindin-frontend
            sudo docker-compose build

      - name: Start API Docker-compose VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/Codigo/dindin-api
            sudo docker-compose up -d

      - name: Start frontend Docker-compose VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/Codigo/dindin-frontend
            sudo docker-compose up -d
